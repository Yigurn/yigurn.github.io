<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-06-02T20:06:06+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Joshua Lewis | Midlands Software Analyst</title><subtitle>Midlands based performance tester and developer</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/one/2020/04/29/Test1.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-04-29T09:42:02+01:00</published><updated>2020-04-29T09:42:02+01:00</updated><id>http://localhost:4000/jekyll/update/one/2020/04/29/Test1</id><content type="html" xml:base="http://localhost:4000/jekyll/update/one/2020/04/29/Test1.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="one" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/one/2020/04/29/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-04-29T09:42:02+01:00</published><updated>2020-04-29T09:42:02+01:00</updated><id>http://localhost:4000/jekyll/update/one/2020/04/29/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/one/2020/04/29/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="one" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/images/end.png" /><media:content medium="image" url="http://localhost:4000/images/end.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Vino Guitar #5 - Finally Build!</title><link href="http://localhost:4000/tinker/music/one/2020/04/24/Vino-Guitar-5.html" rel="alternate" type="text/html" title="Vino Guitar #5 - Finally Build!" /><published>2020-04-24T00:00:00+01:00</published><updated>2020-04-24T00:00:00+01:00</updated><id>http://localhost:4000/tinker/music/one/2020/04/24/Vino-Guitar-5</id><content type="html" xml:base="http://localhost:4000/tinker/music/one/2020/04/24/Vino-Guitar-5.html">&lt;p&gt;After a few day of sanding the guitar, rounding the corners and filling in small holes it was in a stage where I was ready to paint it. A few coats later, the seems in the wood started to show through, which was a little worrying, but I persevered. I began the black outline, trying to get a slight fade effect around the edge.
[PHOTO - Vino 24th 19:45] black outline
The cavities are all filled with several coats of conductive paint, which looks and works great, apart from the fact that if you ever touch it, it will rub off straight away, I actually really like that this happened, because It gave the yellow a more uneven colour more like the band logo.
[PHOTO - Vino 12th 19:45] dirty look
[PHOTO - Vino 12th 19:45] logo
A few coats of Lacquer and some fine sanding was all that was needed to finish off the guitar, before assembling it all together ready to play
[PHOTO - Vino 12th 19:45] final build
[PHOTO - Vino 12th 19:45] final build
[PHOTO - Vino 12th 19:45] final build
Hopefully I will be back to give a post mortem about the sound and how well it is holding up. Now all that is left is to learn how to play!&lt;/p&gt;</content><author><name></name></author><category term="one" /><category term="guitar" /><category term="music" /><summary type="html">After a few day of sanding the guitar, rounding the corners and filling in small holes it was in a stage where I was ready to paint it. A few coats later, the seems in the wood started to show through, which was a little worrying, but I persevered. I began the black outline, trying to get a slight fade effect around the edge. [PHOTO - Vino 24th 19:45] black outline The cavities are all filled with several coats of conductive paint, which looks and works great, apart from the fact that if you ever touch it, it will rub off straight away, I actually really like that this happened, because It gave the yellow a more uneven colour more like the band logo. [PHOTO - Vino 12th 19:45] dirty look [PHOTO - Vino 12th 19:45] logo A few coats of Lacquer and some fine sanding was all that was needed to finish off the guitar, before assembling it all together ready to play [PHOTO - Vino 12th 19:45] final build [PHOTO - Vino 12th 19:45] final build [PHOTO - Vino 12th 19:45] final build Hopefully I will be back to give a post mortem about the sound and how well it is holding up. Now all that is left is to learn how to play!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://placehold.it/900x300" /><media:content medium="image" url="http://placehold.it/900x300" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Vino Guitar #4 - Fretting about Wires</title><link href="http://localhost:4000/2020/04/17/Vino-Guitar-4.html" rel="alternate" type="text/html" title="Vino Guitar #4 - Fretting about Wires" /><published>2020-04-17T00:00:00+01:00</published><updated>2020-04-17T00:00:00+01:00</updated><id>http://localhost:4000/2020/04/17/Vino-Guitar-4</id><content type="html" xml:base="http://localhost:4000/2020/04/17/Vino-Guitar-4.html">&lt;p&gt;[PHOTO - Vino 17th] wirepaths
I spent a while figuring out the best location for the cavities to join up, since I didn’t want to use a pickguard on the guitar. This also helped me choose the best location for the jack socket and switches, since they would be the entry points for the drill.
After I had the holes drilled, I needed to route out space for the socket. This had to be done precisely, otherwise I could carve too far into the guitar and hit the bridge screws.
[PHOTO - Vino 12th 19:45] jack socket
It is at this point that I realized I had made a serious mistake with the neck. There was no zeroth fret…
[PHOTO - Vino 12th 19:45] no zero fret
[PHOTO - Vino 12th 19:45] online example
We had somehow not seen this when doing our research, and so after discussions of trying to add a nut back in, or just using a capo and down tuning the guitar, I pried a fret from an old guitar neck and placed it when the nut would have been.
[PHOTO - Vino 12th 19:45] fret
I applied some test wiring to the guitar to make sure everything worked and strung up the guitar for the first time. It sounded… Bad. But there was sound, and I assumed the noise was due to the lack of shielding and all the exposed wires which weren’t even properly soldered.
[PHOTO - Vino 12th 19:45] wires&lt;/p&gt;</content><author><name></name></author><summary type="html">[PHOTO - Vino 17th] wirepaths I spent a while figuring out the best location for the cavities to join up, since I didn’t want to use a pickguard on the guitar. This also helped me choose the best location for the jack socket and switches, since they would be the entry points for the drill. After I had the holes drilled, I needed to route out space for the socket. This had to be done precisely, otherwise I could carve too far into the guitar and hit the bridge screws. [PHOTO - Vino 12th 19:45] jack socket It is at this point that I realized I had made a serious mistake with the neck. There was no zeroth fret… [PHOTO - Vino 12th 19:45] no zero fret [PHOTO - Vino 12th 19:45] online example We had somehow not seen this when doing our research, and so after discussions of trying to add a nut back in, or just using a capo and down tuning the guitar, I pried a fret from an old guitar neck and placed it when the nut would have been. [PHOTO - Vino 12th 19:45] fret I applied some test wiring to the guitar to make sure everything worked and strung up the guitar for the first time. It sounded… Bad. But there was sound, and I assumed the noise was due to the lack of shielding and all the exposed wires which weren’t even properly soldered. [PHOTO - Vino 12th 19:45] wires</summary></entry><entry><title type="html">Vino Guitar #3 - Picking up Again</title><link href="http://localhost:4000/2020/04/13/Vino-Guitar-3.html" rel="alternate" type="text/html" title="Vino Guitar #3 - Picking up Again" /><published>2020-04-13T00:00:00+01:00</published><updated>2020-04-13T00:00:00+01:00</updated><id>http://localhost:4000/2020/04/13/Vino-Guitar-3</id><content type="html" xml:base="http://localhost:4000/2020/04/13/Vino-Guitar-3.html">&lt;p&gt;Using string I marked out the location of the two E strings in order to place the pickup in the right locations and began routing the cavities. I recessed a smaller hole for the pickup to sit in while the screws rest in the edges.
[PHOTO - Vino 12th 19:45] string
[PHOTO - Vino 12th 19:45] cavity
[PHOTO - Vino 12th 19:45] cavity double
Due to the design I was going for, I wanted to make the cavities as small as possible as there would be no pickguard covering them on either the front or the back of the guitar. Because of the shape of the pickups I would have to either extend the cavities out on one of the sides, or carve a hole within the side of each cavity. I attempted the latter, but due to not have the correct tools found this not to be possible and instead decided that I could file down the plastic of the pickups (Probably not the best idea, but I had a few laying around). Whilst trying to screw in the pickups I had 2 screws snap their heads and get stuck in the body, after a few attempts at removing the screws I started to damage the body and end up unfortunately leaving them in there.&lt;/p&gt;</content><author><name></name></author><summary type="html">Using string I marked out the location of the two E strings in order to place the pickup in the right locations and began routing the cavities. I recessed a smaller hole for the pickup to sit in while the screws rest in the edges. [PHOTO - Vino 12th 19:45] string [PHOTO - Vino 12th 19:45] cavity [PHOTO - Vino 12th 19:45] cavity double Due to the design I was going for, I wanted to make the cavities as small as possible as there would be no pickguard covering them on either the front or the back of the guitar. Because of the shape of the pickups I would have to either extend the cavities out on one of the sides, or carve a hole within the side of each cavity. I attempted the latter, but due to not have the correct tools found this not to be possible and instead decided that I could file down the plastic of the pickups (Probably not the best idea, but I had a few laying around). Whilst trying to screw in the pickups I had 2 screws snap their heads and get stuck in the body, after a few attempts at removing the screws I started to damage the body and end up unfortunately leaving them in there.</summary></entry><entry><title type="html">Orbits</title><link href="http://localhost:4000/2020/03/25/Orbits.html" rel="alternate" type="text/html" title="Orbits" /><published>2020-03-25T00:00:00+00:00</published><updated>2020-03-25T00:00:00+00:00</updated><id>http://localhost:4000/2020/03/25/Orbits</id><content type="html" xml:base="http://localhost:4000/2020/03/25/Orbits.html">&lt;p&gt;Currently the planets rotate on the spot, due to past attempts at orbitting the sun, either using randomly generated paths, or gravational forces. Both versions resulting in issues.
Using gravity was my initial plan, in order to allow rockets to knock smaller planets off course and collisions to destroy planets at points, however collisions was all I could do. All the time. Getting randomly sized and weighted planets to stay in orbits for even a minute proved very tricky, but open up an idea to a new type of gamemode &lt;b&gt;Gravity Well&lt;/b&gt;. 
[Include a gif of the planets smolly circling and falling into the sun]
This gamemode would have multiple planets spawning and circling the sun as they slowly get sucked in, cauing players to have to constantly try and move between them refueling and fighting along the way.
Before starting to implement this version of the game, I wanted to have some planets in constant orbit around the sun and developed a system where orbits are randomly generatedat different distances around the sun. Whilst this works, it makes the game much slower as you are limited as to which planets are near you each time. so I started creating a ring system where planets are roughly the same distance away from the sun and some even share orbits. Unfortunately this causes the planets to collide often where the orbits cross. I developed a script to detect where the planets would collide and forced the orbits to recalculate if the paths were to close together, but with the different speeds and orbits, getting them to all not crash was getting rather complicated. After a lot of thought and attempts I realise it is quite hard to even see the orbits within the game, so decided on a new plan to hard code a few orbits and then place the planets randomly upon them.&lt;/p&gt;</content><author><name></name></author><summary type="html">Currently the planets rotate on the spot, due to past attempts at orbitting the sun, either using randomly generated paths, or gravational forces. Both versions resulting in issues. Using gravity was my initial plan, in order to allow rockets to knock smaller planets off course and collisions to destroy planets at points, however collisions was all I could do. All the time. Getting randomly sized and weighted planets to stay in orbits for even a minute proved very tricky, but open up an idea to a new type of gamemode Gravity Well. [Include a gif of the planets smolly circling and falling into the sun] This gamemode would have multiple planets spawning and circling the sun as they slowly get sucked in, cauing players to have to constantly try and move between them refueling and fighting along the way. Before starting to implement this version of the game, I wanted to have some planets in constant orbit around the sun and developed a system where orbits are randomly generatedat different distances around the sun. Whilst this works, it makes the game much slower as you are limited as to which planets are near you each time. so I started creating a ring system where planets are roughly the same distance away from the sun and some even share orbits. Unfortunately this causes the planets to collide often where the orbits cross. I developed a script to detect where the planets would collide and forced the orbits to recalculate if the paths were to close together, but with the different speeds and orbits, getting them to all not crash was getting rather complicated. After a lot of thought and attempts I realise it is quite hard to even see the orbits within the game, so decided on a new plan to hard code a few orbits and then place the planets randomly upon them.</summary></entry><entry><title type="html">New Dev Blog</title><link href="http://localhost:4000/2020/03/19/new-dev-blog.html" rel="alternate" type="text/html" title="New Dev Blog" /><published>2020-03-19T00:00:00+00:00</published><updated>2020-03-19T00:00:00+00:00</updated><id>http://localhost:4000/2020/03/19/new-dev-blog</id><content type="html" xml:base="http://localhost:4000/2020/03/19/new-dev-blog.html">&lt;p&gt;Welcome to a new devblog about Endless Planet. Here I will record the progress made as the game develops. The idea is for Endless Planet to be a 4 player local co-op game, where you hop between different planets fighting with or against each other.
On from this post, I will try and make weekly posts with the new features and progress. If you want to follow along and see which features are being currently worked on, you can check out the trello page, or see a current gameplay video.&lt;/p&gt;</content><author><name></name></author><summary type="html">Welcome to a new devblog about Endless Planet. Here I will record the progress made as the game develops. The idea is for Endless Planet to be a 4 player local co-op game, where you hop between different planets fighting with or against each other. On from this post, I will try and make weekly posts with the new features and progress. If you want to follow along and see which features are being currently worked on, you can check out the trello page, or see a current gameplay video.</summary></entry><entry><title type="html">Respawning</title><link href="http://localhost:4000/2020/03/16/Respawning.html" rel="alternate" type="text/html" title="Respawning" /><published>2020-03-16T00:00:00+00:00</published><updated>2020-03-16T00:00:00+00:00</updated><id>http://localhost:4000/2020/03/16/Respawning</id><content type="html" xml:base="http://localhost:4000/2020/03/16/Respawning.html">&lt;p&gt;Currently in the game, respawning works by selecting the first planet from a list and placing you a set distance from the centre in a random direction. This can cause issues by either dropping you too far away from small planets, that another ends up pulling you in, or worse, spawning you inside the planet due to the hills going further than the distance. My first attempt at fixing this is by casting a ray from the centre of the planet and seeing when it collides with the land, unfortunately this fails due to the collider facing outwards rather than inwards. So next I tried choosing a random point twice the size of the planet away and casting a ray back towards the centre, this gets me the height on the land, where I can then spawn the player. To this I add a small distance in the direction away from the planet in order to stop the player clipping through the ground.
Next I wanted to tackle the planet selection issue, this was a simple fix, rather than picking the first planet found with a ‘planet’ tag, I just selected a random planet out of the list of planets.
Lastly I want to stop the player from spawning in water. Since all the water only spawns below surface level, when I cast a ray to find land, I can check to see if it is greater than the planet radius away and if not, just reselect a random point. I can see this potentially forcing the game to freeze if the planet selected is mostly water and will have to think of alternatives later.&lt;/p&gt;</content><author><name></name></author><summary type="html">Currently in the game, respawning works by selecting the first planet from a list and placing you a set distance from the centre in a random direction. This can cause issues by either dropping you too far away from small planets, that another ends up pulling you in, or worse, spawning you inside the planet due to the hills going further than the distance. My first attempt at fixing this is by casting a ray from the centre of the planet and seeing when it collides with the land, unfortunately this fails due to the collider facing outwards rather than inwards. So next I tried choosing a random point twice the size of the planet away and casting a ray back towards the centre, this gets me the height on the land, where I can then spawn the player. To this I add a small distance in the direction away from the planet in order to stop the player clipping through the ground. Next I wanted to tackle the planet selection issue, this was a simple fix, rather than picking the first planet found with a ‘planet’ tag, I just selected a random planet out of the list of planets. Lastly I want to stop the player from spawning in water. Since all the water only spawns below surface level, when I cast a ray to find land, I can check to see if it is greater than the planet radius away and if not, just reselect a random point. I can see this potentially forcing the game to freeze if the planet selected is mostly water and will have to think of alternatives later.</summary></entry><entry><title type="html">Vino Guitar #2 - Wood you cut it out?</title><link href="http://localhost:4000/2020/01/03/Vino-Guitar-2.html" rel="alternate" type="text/html" title="Vino Guitar #2 - Wood you cut it out?" /><published>2020-01-03T00:00:00+00:00</published><updated>2020-01-03T00:00:00+00:00</updated><id>http://localhost:4000/2020/01/03/Vino-Guitar-2</id><content type="html" xml:base="http://localhost:4000/2020/01/03/Vino-Guitar-2.html">&lt;p&gt;We finished carving out the body and attached the bridge as low as possible. Since we had to cut out the body from the front and back due to short drill bits, there was a lot of rough edges that needed sanding down.
[PHOTO - Vino ] Cut out
Next we needed the neck to be the correct distance from the bridge and began routing the neck pocket. Since this needed to be much more accurate than the overall body shape we routed a smaller area and hand filed to the desired size.
At this point I had to go back to London again since the holidays were over.&lt;/p&gt;</content><author><name></name></author><summary type="html">We finished carving out the body and attached the bridge as low as possible. Since we had to cut out the body from the front and back due to short drill bits, there was a lot of rough edges that needed sanding down. [PHOTO - Vino ] Cut out Next we needed the neck to be the correct distance from the bridge and began routing the neck pocket. Since this needed to be much more accurate than the overall body shape we routed a smaller area and hand filed to the desired size. At this point I had to go back to London again since the holidays were over.</summary></entry><entry><title type="html">New Project - Vinolent Guitar</title><link href="http://localhost:4000/2019/12/28/New-Project.html" rel="alternate" type="text/html" title="New Project - Vinolent Guitar" /><published>2019-12-28T00:00:00+00:00</published><updated>2019-12-28T00:00:00+00:00</updated><id>http://localhost:4000/2019/12/28/New-Project</id><content type="html" xml:base="http://localhost:4000/2019/12/28/New-Project.html">&lt;p&gt;Whilst renovating Michael's kitchen, they ended up having excess wood from the countertop. Which he noticed was about the same thickness as a regular guitar body.
So after our previous attempts at modifying old guitars, we began discussing ideas for new designs.&lt;/p&gt;
&lt;p&gt;[PHOTO - new Kay] Mixing parts from a Dean and a Kay &lt;/p&gt;
&lt;p&gt;[PHOTO - red guitar]&lt;/p&gt;
&lt;p&gt;This guitar had a broken neck which we replaced and completely changed the wiring to include: individual pickup selection and tone switches, overall volume controls at set steps rather than continuous.&lt;/p&gt;

&lt;p&gt;Whilst trying to decide on pickup location we joked about placing them in the shape of the Vinolent face, and the idea was born. Since we were making the body as small as possible we also decided to make a headless guitar for an even smaller height.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Vinolent Face.jpg&quot; alt=&quot;Vinolent Face&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Within a few day we had gathered the tools and parts we needed and began cutting out the shape of the body.
&lt;img src=&quot;/images/vinoGuitar-shape.JPG&quot; alt=&quot;Guitar begins routing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the neck we had to cut it at the right point to allow it to fit snug against the fretboard, at first we tried on a neck that was already damaged to see how easy it would be to convert.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vinoGuitar-neckCut.JPG&quot; alt=&quot;Guitar neck cutoff&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Whilst renovating Michael's kitchen, they ended up having excess wood from the countertop. Which he noticed was about the same thickness as a regular guitar body. So after our previous attempts at modifying old guitars, we began discussing ideas for new designs. [PHOTO - new Kay] Mixing parts from a Dean and a Kay [PHOTO - red guitar] This guitar had a broken neck which we replaced and completely changed the wiring to include: individual pickup selection and tone switches, overall volume controls at set steps rather than continuous.</summary></entry></feed>